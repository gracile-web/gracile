{"version":3,"file":"basic.js","sources":["../../../src/routes/gracile-api-endpoint/basic.ts"],"sourcesContent":["import { defineRoute, Route } from '@gracile/gracile/route';\n\nexport default defineRoute({\n\tlocals: (locals: Express.Locals) => ({ ...locals }),\n\n\thandler: {\n\t\tGET: async ({ url, request, locals }) => {\n\t\t\tconsole.log({ locals });\n\t\t\treturn Response.json(\n\t\t\t\t{\n\t\t\t\t\turl,\n\t\t\t\t\tparam1: url.searchParams.get('foo'),\n\t\t\t\t\t[Route.RequestMethod.GET]: 'ok',\n\t\t\t\t\tlocals: { traceId: locals.traceId.length },\n\t\t\t\t},\n\t\t\t\t{ status: 200, statusText: 'DONE', headers: { bar: 'baz' } },\n\t\t\t);\n\t\t},\n\t\tPOST: async ({ url, request, locals }) => {\n\t\t\tif (url.searchParams.get('form') === 'true') {\n\t\t\t\tconst data = await request.formData();\n\t\t\t\treturn Response.json({\n\t\t\t\t\tformData: { bar: data.get('bar'), doz: data.get('doz') },\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn Response.json(\n\t\t\t\t{\n\t\t\t\t\turl,\n\t\t\t\t\tparam1: url.searchParams.get('foo'),\n\t\t\t\t\t[Route.RequestMethod.POST]: 'ok',\n\t\t\t\t\tbody: await request.json(),\n\t\t\t\t\tlocals: { traceId: locals.traceId.length },\n\t\t\t\t},\n\t\t\t\t{ status: 200, statusText: 'DONE', headers: { bar: 'baz' } },\n\t\t\t);\n\t\t},\n\t\tPUT: async ({ url, request, locals }) => {\n\t\t\treturn Response.json(\n\t\t\t\t{\n\t\t\t\t\turl,\n\t\t\t\t\tparam1: url.searchParams.get('foo'),\n\t\t\t\t\t[Route.RequestMethod.PUT]: 'ok',\n\t\t\t\t\tbody: await request.json(),\n\t\t\t\t\tlocals: { traceId: locals.traceId.length },\n\t\t\t\t},\n\t\t\t\t{ status: 200, statusText: 'DONE', headers: { bar: 'baz' } },\n\t\t\t);\n\t\t},\n\t\tQUERY: async ({ url, request, locals }) => {\n\t\t\treturn Response.json(\n\t\t\t\t{\n\t\t\t\t\turl,\n\t\t\t\t\tparam1: url.searchParams.get('foo'),\n\t\t\t\t\t[Route.RequestMethod.QUERY]: 'ok',\n\t\t\t\t\tbody: await request.json(),\n\t\t\t\t\tlocals: { traceId: locals.traceId.length },\n\t\t\t\t},\n\t\t\t\t{ status: 200, statusText: 'DONE', headers: { bar: 'baz' } },\n\t\t\t);\n\t\t},\n\t\tDELETE: async ({ url, request, locals }) => {\n\t\t\treturn Response.json(\n\t\t\t\t{\n\t\t\t\t\turl,\n\t\t\t\t\tparam1: url.searchParams.get('foo'),\n\t\t\t\t\t[Route.RequestMethod.DELETE]: 'ok',\n\t\t\t\t\tlocals: { traceId: locals.traceId.length },\n\t\t\t\t},\n\t\t\t\t{ status: 200, statusText: 'DONE', headers: { bar: 'baz' } },\n\t\t\t);\n\t\t},\n\t\tPATCH: async ({ url, request, locals }) => {\n\t\t\treturn Response.json(\n\t\t\t\t{\n\t\t\t\t\turl,\n\t\t\t\t\tparam1: url.searchParams.get('foo'),\n\t\t\t\t\t[Route.RequestMethod.PATCH]: 'ok',\n\t\t\t\t\tbody: await request.json(),\n\t\t\t\t\tlocals: { traceId: locals.traceId.length },\n\t\t\t\t},\n\t\t\t\t{ status: 200, statusText: 'DONE', headers: { bar: 'baz' } },\n\t\t\t);\n\t\t},\n\t\t// HEAD: async ({ url, request }) => {\n\t\t// \treturn new Response(null);\n\t\t// },\n\t\t// OPTIONS: async ({ url, request }) => {\n\t\t// \treturn Response.json({url, [Route.RequestMethod.OPTIONS]: 'ok', body: await request.json() });\n\t\t// },\n\t},\n});\n"],"names":["Route.RequestMethod"],"mappings":"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"}